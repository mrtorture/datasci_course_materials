flow <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
flow
flow.summary
flow.summary()
sumary(flow)
summary(flow)
names(flow)
flow$pop
flow$synecho
flow$pop
flow$pop --help
sumary(flow$pop)
summary(flow$pop)
summary(flow)
plot(flow)
plot($pe,$chl_small)
plot(flow$pe,flow$chl_small)
plot(flow$pe,flow$chl_small, color = flow$pop)
ggplot(flow$pe,flow$chl_small)
ggpplot2
plot(flow$pe,flow$chl_small, col=flow$pop)
plot(flow$pe,flow$chl_small, col=flow$pop, text())
plot(flow$pe,flow$chl_small, col=flow$pop, text(flow$pop)
)
flow <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
plot(flow$pe,flow$chl_small, col=flow$pop)
install.packages("ggplot2", dependencies=TRUE)
plot(flow$pe,flow$chl_small, col=flow$pop)
text(flow$pop)
flow <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
q()
flow <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
plot(flow$pe, flow$chl_small, color=flow$pop)
plot(flow$pe, flow$chl_small, col=flow$pop)
text()
install.packages("ggplot2", dependencies = TRUE)
ggplot(data = flow, aes(x = pe, y = chl_small, colour = pop)) + geom_line()
ggplot2(data = flow, aes(x = pe, y = chl_small, colour = pop)) + geom_line()
install.packages("ggplot", dependencies = TRUE)
qplot(pe, chl_small, data=flow, color=pop)
install.packages("ggplot2", dependencies = TRUE)
qplot(pe, chl_small, data=flow, color=pop)
require(ggplot2)
qplot(pe, chl_small, data=flow, color=pop)
print(flow)
install.packages('rpart')
require(rpart)
model <- rpart(fol, method="class", data=flow)
fol <- formula(pop Ëœ flow$fsc_small + flow$fsc_perp + flow$fsc_big + flow$pe + flow$chl_big + flow$chl_small)
fol <- formula(pop ~ flow$fsc_small + flow$fsc_perp + flow$fsc_big + flow$pe + flow$chl_big + flow$chl_small)
fol
model <- rpart(fol, method="class", data=flow)
print(model)
printcp(model)
predict(model)
printcp(model)
predictions <- predict(fit, newdata=flow, type="class")
predictions <- predict(model, newdata=flow, type="class")
predd <- as.data.frame(predictions)
prob <- sum(predd[,1] == flow$pop) / nrow(flow)
prob
library(randomforest)
library(randomForest)
model <- randomForest(model, data=flow)
model <- randomForest(fol, data=flow)
predictions <- predict(model, newdata=flow, type="class")
predd <- as.data.frame(predictions)
prob <- sum(predd[,1] == flow$pop) / nrow(flow)
prob
predd
predictions
model
model <- randomForest(fol, data=flow, nodesize=10)
predictions <- predict(model, newdata=flow, type="class")
predd <- as.data.frame(predictions)
prob <- sum(predd[,1] == flow$pop) / nrow(flow)
prob
importance(model)
import("e1071")
library(e1071)
model <- svm(fol, data=flow)
predictions <- predict(model, newdata=flow, type="class")
p = as.data.frame(predictions)
p <- as.data.frame(predictions)
prob <- sum(p[,1] == flow$pop) / nrow(flow)
prob
table(model)
table(pred = predictions, true = flow$pop)
model <- rpart(fol, method="class", data=flow)
predictions <- predict(model, newdata=flow, type="class")
table(pred = predictions, true = flow$pop)
         true
pred      crypto  nano  pico synecho ultra
  crypto       0     0     0       0     0
  nano       102 10068     1      84  1414
  pico         0     4 18833       2  3891
  synecho      0    22    92   18060   200
  ultra        0  2604  1934       0 15032
model <- randomForest(fol, data=flow)
model <- randomForest(fol, data=flow, nodesize = 10)
predictions <- predict(model, newdata=flow, type="class")
table(pred = predictions, true = flow$pop)
plot(flow$fsc_small)
plot(flow$fsc_perp)
names(tree)
names(flow)
plot(flow$fsc_big)
plot(flow$pe)
plot(flow$chl_small)
plot(flow$chl_big)
plot(flow$pop)
plot(flow$fsc_big)
flow$file_id
flow$file_id - 208
flow$file_id[208]
fluw = subset(flow, file_id != 208)
fluw
qplot(time, chl_big, data=fluw, color=pop)
model <- rpart(fol, method="class", data=fluw)
names(fluw)
model <- rpart(fol, method="class", data=fluw)
fluw$file_id = na
fluw$file_id == Na
fluw$file_id == NaN
fluw[ ,apply(a, 2, function(z) !any(is.na(z)))]
fluw[ ,apply(fluw, 2, function(z) !any(is.na(z)))]
fluw <- fluw[ ,apply(fluw, 2, function(z) !any(is.na(z)))]
fluw$file_id == NaN
model <- rpart(fol, method="class", data=fluw)
flew = flow[flow$file_d %in% c("208"),]
flew$type_id == 208
model <- rpart(fol, method="class", data=flew)
flew$file_id == NaN
flew = flow[flow$file_d != c("208"),]
flew$file_id == NaN
names(flew)
flew$file_id
train.index <- sample(1:100, size=60, replace=FALSE)
train <- flow[train.index,]
train
test <- flow[-train.index,]
summary(train)
model <- rpart(fol, method="class", data=train)
m <- rpart(fol, method="class", data=train)
f <- rpart(fol, method="class", data=flow)
f <- rpart(fol, method="class", data=train)
f <- rpart(fol, method="class", data=test)
f <- rpart(fol, method="class", data=test)
f <- rpart(fol, method="class", newdata=test)
test
name(test)
names(test)
f <- rpart(fol, method="class", newdata=test)
fol <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
f <- rpart(fol, method="class", newdata=test)
fol <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
.
fol
names(test)
f <- rpart(fol, method="class", newdata=test)
q()
